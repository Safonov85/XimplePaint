
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	
	private global::Gtk.Action FileAction;
	
	private global::Gtk.Action CreateNewAction;
	
	private global::Gtk.Action SavePictureAction;
	
	private global::Gtk.Action EditAction;
	
	private global::Gtk.Action ToolsAction;
	
	private global::Gtk.Action AboutAction;
	
	private global::Gtk.Action ClearAllPaintAction;
	
	private global::Gtk.VBox vboxMain;
	
	private global::Gtk.MenuBar menubar1;
	
	private global::Gtk.HBox hbox1;
	
	private global::Gtk.VBox vbox2;
	
	private global::Gtk.VBox vbox3;
	
	private global::Gtk.ToggleButton toggleButtonPaint;
	
	private global::Gtk.ToggleButton toggleButtonErase;
	
	private global::Gtk.Fixed fixed1;
	
	private global::Gtk.SpinButton spinbuttonSize;
	
	private global::Gtk.Label labelSize;
	
	private global::Gtk.ColorButton colorButtonPicker;
	
	private global::Gtk.Fixed fixedPaintWindow;
	
	private global::Gtk.DrawingArea drawingAreaPaint;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction, null);
		this.CreateNewAction = new global::Gtk.Action ("CreateNewAction", global::Mono.Unix.Catalog.GetString ("Create New"), null, null);
		this.CreateNewAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Create New");
		w1.Add (this.CreateNewAction, null);
		this.SavePictureAction = new global::Gtk.Action ("SavePictureAction", global::Mono.Unix.Catalog.GetString ("Save Picture..."), null, null);
		this.SavePictureAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save Picture...");
		w1.Add (this.SavePictureAction, null);
		this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
		this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
		w1.Add (this.EditAction, null);
		this.ToolsAction = new global::Gtk.Action ("ToolsAction", global::Mono.Unix.Catalog.GetString ("Tools"), null, null);
		this.ToolsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Tools");
		w1.Add (this.ToolsAction, null);
		this.AboutAction = new global::Gtk.Action ("AboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, null);
		this.AboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
		w1.Add (this.AboutAction, null);
		this.ClearAllPaintAction = new global::Gtk.Action ("ClearAllPaintAction", global::Mono.Unix.Catalog.GetString ("Clear All Paint"), null, null);
		this.ClearAllPaintAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Clear All Paint");
		w1.Add (this.ClearAllPaintAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vboxMain = new global::Gtk.VBox ();
		this.vboxMain.WidthRequest = 162;
		this.vboxMain.HeightRequest = 463;
		this.vboxMain.Name = "vboxMain";
		this.vboxMain.Spacing = 6;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='CreateNewAction' action='CreateNewAction'/><menuitem name='SavePictureAction' action='SavePictureAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='ClearAllPaintAction' action='ClearAllPaintAction'/></menu><menu name='ToolsAction' action='ToolsAction'/><menu name='AboutAction' action='AboutAction'/></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vboxMain.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.hbox1 = new global::Gtk.HBox ();
		this.hbox1.Name = "hbox1";
		this.hbox1.Spacing = 6;
		// Container child hbox1.Gtk.Box+BoxChild
		this.vbox2 = new global::Gtk.VBox ();
		this.vbox2.Name = "vbox2";
		this.vbox2.Spacing = 6;
		// Container child vbox2.Gtk.Box+BoxChild
		this.vbox3 = new global::Gtk.VBox ();
		this.vbox3.Name = "vbox3";
		this.vbox3.Spacing = 6;
		// Container child vbox3.Gtk.Box+BoxChild
		this.toggleButtonPaint = new global::Gtk.ToggleButton ();
		this.toggleButtonPaint.CanFocus = true;
		this.toggleButtonPaint.Name = "toggleButtonPaint";
		this.toggleButtonPaint.UseUnderline = true;
		this.toggleButtonPaint.Label = global::Mono.Unix.Catalog.GetString ("Paint");
		this.vbox3.Add (this.toggleButtonPaint);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.toggleButtonPaint]));
		w3.Position = 0;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.toggleButtonErase = new global::Gtk.ToggleButton ();
		this.toggleButtonErase.CanFocus = true;
		this.toggleButtonErase.Name = "toggleButtonErase";
		this.toggleButtonErase.UseUnderline = true;
		this.toggleButtonErase.Label = global::Mono.Unix.Catalog.GetString ("Erase");
		this.vbox3.Add (this.toggleButtonErase);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.toggleButtonErase]));
		w4.Position = 1;
		w4.Expand = false;
		w4.Fill = false;
		this.vbox2.Add (this.vbox3);
		global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.vbox3]));
		w5.Position = 0;
		w5.Expand = false;
		w5.Fill = false;
		// Container child vbox2.Gtk.Box+BoxChild
		this.fixed1 = new global::Gtk.Fixed ();
		this.fixed1.WidthRequest = 47;
		this.fixed1.HeightRequest = 505;
		this.fixed1.Name = "fixed1";
		this.fixed1.HasWindow = false;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.spinbuttonSize = new global::Gtk.SpinButton (1, 100, 1);
		this.spinbuttonSize.WidthRequest = 47;
		this.spinbuttonSize.HeightRequest = 0;
		this.spinbuttonSize.CanFocus = true;
		this.spinbuttonSize.Name = "spinbuttonSize";
		this.spinbuttonSize.Adjustment.PageIncrement = 10;
		this.spinbuttonSize.ClimbRate = 1;
		this.spinbuttonSize.Numeric = true;
		this.spinbuttonSize.Value = 5;
		this.fixed1.Add (this.spinbuttonSize);
		global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.fixed1 [this.spinbuttonSize]));
		w6.X = -1;
		w6.Y = 24;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.labelSize = new global::Gtk.Label ();
		this.labelSize.Name = "labelSize";
		this.labelSize.LabelProp = global::Mono.Unix.Catalog.GetString ("SIZE");
		this.fixed1.Add (this.labelSize);
		global::Gtk.Fixed.FixedChild w7 = ((global::Gtk.Fixed.FixedChild)(this.fixed1 [this.labelSize]));
		w7.X = 12;
		w7.Y = 3;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.colorButtonPicker = new global::Gtk.ColorButton ();
		this.colorButtonPicker.CanFocus = true;
		this.colorButtonPicker.Events = ((global::Gdk.EventMask)(784));
		this.colorButtonPicker.Name = "colorButtonPicker";
		this.fixed1.Add (this.colorButtonPicker);
		global::Gtk.Fixed.FixedChild w8 = ((global::Gtk.Fixed.FixedChild)(this.fixed1 [this.colorButtonPicker]));
		w8.X = 2;
		w8.Y = 62;
		this.vbox2.Add (this.fixed1);
		global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.fixed1]));
		w9.Position = 1;
		w9.Expand = false;
		w9.Fill = false;
		this.hbox1.Add (this.vbox2);
		global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.vbox2]));
		w10.Position = 0;
		w10.Expand = false;
		w10.Fill = false;
		// Container child hbox1.Gtk.Box+BoxChild
		this.fixedPaintWindow = new global::Gtk.Fixed ();
		this.fixedPaintWindow.WidthRequest = 464;
		this.fixedPaintWindow.HeightRequest = 521;
		this.fixedPaintWindow.Name = "fixedPaintWindow";
		this.fixedPaintWindow.HasWindow = false;
		// Container child fixedPaintWindow.Gtk.Fixed+FixedChild
		this.drawingAreaPaint = new global::Gtk.DrawingArea ();
		this.drawingAreaPaint.WidthRequest = 550;
		this.drawingAreaPaint.HeightRequest = 450;
		this.drawingAreaPaint.Events = ((global::Gdk.EventMask)(772));
		this.drawingAreaPaint.Name = "drawingAreaPaint";
		this.fixedPaintWindow.Add (this.drawingAreaPaint);
		global::Gtk.Fixed.FixedChild w11 = ((global::Gtk.Fixed.FixedChild)(this.fixedPaintWindow [this.drawingAreaPaint]));
		w11.X = 108;
		w11.Y = 54;
		this.hbox1.Add (this.fixedPaintWindow);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.fixedPaintWindow]));
		w12.Position = 1;
		this.vboxMain.Add (this.hbox1);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.hbox1]));
		w13.Position = 1;
		w13.Expand = false;
		w13.Fill = false;
		this.Add (this.vboxMain);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 807;
		this.DefaultHeight = 638;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.ClearAllPaintAction.Activated += new global::System.EventHandler (this.OnClearAllPaintActionActivated);
		this.toggleButtonPaint.Pressed += new global::System.EventHandler (this.OnToggleButtonPaintPressed);
		this.toggleButtonPaint.Toggled += new global::System.EventHandler (this.OnToggleButtonPaintToggled);
		this.toggleButtonErase.Pressed += new global::System.EventHandler (this.OnToggleButtonErasePressed);
		this.toggleButtonErase.Toggled += new global::System.EventHandler (this.OnToggleButtonEraseToggled);
		this.drawingAreaPaint.MotionNotifyEvent += new global::Gtk.MotionNotifyEventHandler (this.OnDrawingAreaPaintMotionNotifyEvent);
		this.drawingAreaPaint.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler (this.OnDrawingAreaPaintButtonPressEvent);
		this.drawingAreaPaint.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler (this.OnDrawingAreaPaintButtonReleaseEvent);
	}
}
